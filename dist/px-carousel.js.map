{"version":3,"sources":["px-carousel.es6.js"],"names":["Polymer","is","properties","counterValue","type","Number","value","notify","_currentIndex","_itemsCount","attached","set","_setContainerSize","_carousel","container","$$","width","getBoundingClientRect","children","length","childWidth","Math","round","child","style","$","async","console","log","transform","handleClick","event","detail","sender","increment"],"mappings":"aAAA,CAAC,UAAW,CACVA,QAAQ,CAENC,GAAI,aAFE,CAINC,WAAY,CACV;;;;QAKAC,aAAc,CACZC,KAAMC,MADM,CAEZC,MAAO,CAFK,CAGZC,OAAQ,IAHI,CANJ,CAYVC,cAAeH,MAZL,CAaVI,YAAaJ,MAbH,CAJN,CAoBNK,QApBM,oBAoBK,CACT,KAAKC,GAAL,CAAS,eAAT,CAA0B,CAA1B,EACA,KAAKC,iBAAL,GACA,KAAKC,SAAL,EACD,CAxBK,CA0BND,iBA1BM,6BA0Bc,CAElB,GAAIE,WAAY,KAAKC,EAAL,CAAQ,wBAAR,CAAhB,CACIC,MAAQF,UAAUG,qBAAV,GAAkCD,KAD9C,CAGA,KAAKL,GAAL,CAAS,aAAT,CAAwBG,UAAUI,QAAV,CAAmBC,MAA3C,EAEA,GAAIC,YAAaC,KAAKC,KAAL,CAAW,IAAI,KAAKb,WAAT,CAAuB,KAAlC,EAA2C,KAA5D,CAPkB,gGASlB,kBAAkBK,UAAUI,QAA5B,oHAAsC,IAA7BK,MAA6B,aACpCA,MAAMC,KAAN,CAAYR,KAAZ,CAAoBI,WAAa,GAClC,CAXiB,4LAalBN,UAAUU,KAAV,CAAgBR,KAAhB,CAAwBA,MAAQ,KAAKP,WAAb,CAA2B,IAAnD,CAEA,KAAKgB,CAAL,CAAO,qBAAP,EAA8BD,KAA9B,CAAoCR,KAApC,CAA4CA,MAAQ,IACrD,CA1CK,CA4CNH,SA5CM,qBA4CM,gBACV,KAAKa,KAAL,CAAW,UAAM,CACf,GAAI,MAAKlB,aAAL,CAAqB,CAArB,GAA2B,MAAKC,WAApC,CAAiD,CAC/C,MAAKE,GAAL,CAAS,eAAT,CAA0B,CAA1B,CACD,CAFD,IAEO,CACL,MAAKA,GAAL,CAAS,eAAT,CAA0B,MAAKH,aAAL,CAAqB,CAA/C,CACD,CACDmB,QAAQC,GAAR,CAAYP,KAAKC,KAAL,CAAW,MAAKd,aAAL,CAAmB,MAAKC,WAAxB,CAAsC,KAAjD,EAA0D,KAAtE,EACA,MAAKM,EAAL,CAAQ,wBAAR,EAAkCS,KAAlC,CAAwCK,SAAxC,gBAAmER,KAAKC,KAAL,CAAW,MAAKd,aAAL,CAAmB,MAAKC,WAAxB,CAAsC,OAAjD,EAA4D,KAA/H,MACA,MAAKI,SAAL,EACD,CATD,CASG,IATH,CAUD,CAvDK,CA0DN;;;;MAKAiB,YAAa,qBAASC,KAAT,CAAgBC,MAAhB,CAAwBC,MAAxB,CAAgC,CAC3C,KAAKC,SAAL,EACD,CAjEK,CAmEN;;;;MAKAA,UAAW,oBAAW,CACpB,KAAK/B,YAAL,EACD,CA1EK,CAAR,CA4ED,CA7ED","file":"px-carousel.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'px-carousel',\n\n    properties: {\n      /**\n      * This property keeps track of the number of clicks.\n      *\n      * @property counterValue\n      */\n      counterValue: {\n        type: Number,\n        value: 0,\n        notify: true\n      },\n\n      _currentIndex: Number,\n      _itemsCount: Number\n    },\n\n    attached() {\n      this.set('_currentIndex', 0);\n      this._setContainerSize();\n      this._carousel();\n    },\n\n    _setContainerSize() {\n\n      let container = this.$$('.px-carousel-container'),\n          width = container.getBoundingClientRect().width;\n\n      this.set('_itemsCount', container.children.length);\n\n      let childWidth = Math.round(100/this._itemsCount * 10000) / 10000;\n\n      for (let child of container.children) {\n        child.style.width = childWidth + '%';\n      }\n\n      container.style.width = width * this._itemsCount + 'px';\n\n      this.$['px-carousel-wrapper'].style.width = width + 'px';\n    },\n\n    _carousel() {\n      this.async(() => {\n        if (this._currentIndex + 1 === this._itemsCount) {\n          this.set('_currentIndex', 0);\n        } else {\n          this.set('_currentIndex', this._currentIndex + 1);\n        }\n        console.log(Math.round(this._currentIndex/this._itemsCount * 10000) / 10000);\n        this.$$('.px-carousel-container').style.transform = `translateX(-${Math.round(this._currentIndex/this._itemsCount * 1000000) / 10000}%)`;\n        this._carousel();\n      }, 3000);\n    },\n\n\n    /**\n    * Handles click on the element defined in 'on-click' on the template.\n    *\n    * @method handleClick\n    */\n    handleClick: function(event, detail, sender) {\n      this.increment();\n    },\n\n    /**\n    * Increments the counter\n    *\n    * @method increment\n    */\n    increment: function() {\n      this.counterValue++;\n    }\n  });\n})();\n"]}